#!/bin/bash

MAINFOLDER="${HOME}/.config/yt-feeder"
CONFIG="${MAINFOLDER}/config"
CACHE="${HOME}/.cache/yt-feeder"
CACHE_RSS="${HOME}/.cache/yt-feeder/RSS"

download () {
    if [[ $# == 1 ]]
    then
        coproc player ( nohup youtube-dl -f best "$1" > /dev/null 2>&1 ) &&
        cd .
    elif [[ $# == 2 ]]
    then
        CHECK=$( echo "$1" | cut -d '|' -f2 )
        REVERSE=$( echo "$CHECK" | rev )
        if [[ ${REVERSE:0:1} == "/" ]]
        then
            coproc player ( nohup youtube-dl -f best -o "$CHECK%(title)s.%(ext)s" "$2" > /dev/null 2>&1 ) &&
            cd .
        else
            coproc player ( nohup youtube-dl -f best -o "$CHECK/%(title)s.%(ext)s" "$2" > /dev/null 2>&1 ) &&
            cd .
        fi
    else
        echo "ERROR: Wrong number of arguments passed to the download () function"
        exit 1
    fi
}

custom () {
    if [[ $# == 1 ]]
    then
        LINK=$( cat "$CACHE/link" )
        coproc player ( nohup $( echo $1 | cut -d '|' -f2 ) "$LINK" > /dev/null 2>&1 ) &&
        cd .
    else
        echo "ERROR: Wrong number of arguments passed to the custom () function"
        exit 1
    fi
}

check_pid () {
    if [ -f "$CACHE/pid" ]
    then
        if [[ $# == 0 ]]
        then
            PID_n=$( cat "$CACHE/pid" )
            kill $PID_n
        elif [[ $# == 1 ]]
        then
            PID_n=$( cat "$CACHE/pid" )
            if kill -0 $PID_n ;
            then
                echo "$1";
            else
                rm "$CACHE/pid";
            fi
        else
            echo "ERROR: Wrong number of arguments passed to the check_pid () function"
            exit 1
        fi
    fi
}

if [ $# -eq 0 ]
then
    if [ ! -d "$MAINFOLDER" ]
    then
        mkdir -p "$MAINFOLDER"
        touch "$CONFIG"
    fi
    if [ ! -f "$CONFIG" ]
    then
        touch "$CONFIG"
    fi
    if [ ! -d "$CACHE_RSS" ]
    then
        mkdir -p "$CACHE_RSS"
    fi
fi

if [ $# -eq 0 ]
then
    check_pid "stop"
    echo "refresh(it may take a while)"
    ls -1 "$CACHE_RSS" | sed "s/^/-> /"
else
    if [ x"$@" = x"refresh(it may take a while)" ]
    then
        if [ -f $CONFIG ]
        then
            rm "$CACHE_RSS"/*
            LENGTH=$( wc -l $CONFIG )
            while read p; do
                FEED=$( echo $p | cut -d '|' -f1 )
                NAME=$( echo $p | cut -d '|' -f2 )
                if [[ ! "${FEED:0:19}" == "https://www.youtube" && ! "$FEED" == "DOWNLOAD" && ! "$FEED" == "COMMAND" ]]
                then
                    FEED=$( echo "https://www.youtube.com/feeds/videos.xml?channel_id=$FEED" )
                fi
                if [[ ! "$FEED" == "DOWNLOAD" && ! "$FEED" == "COMMAND" ]]
                then
                    wget $FEED -O "$CACHE_RSS/$NAME"
                fi
            done < $CONFIG
        fi
        check_pid "stop"
        ls -1 "$CACHE_RSS" | sed "s/^/-> /"
    elif [ x"$@" = x"stop" ]
    then
        check_pid
    elif [ x"$@" = x"watch(best)" ]
    then
        LINK=$( cat "$CACHE/link" )
        coproc player ( nohup mpv --ytdl-format=best "$LINK" > /dev/null 2>&1 ) &&
        rm "$CACHE/link"
    elif [ x"$@" = x"watch(worst)" ]
    then
        LINK=$( cat "$CACHE/link" )
        coproc player ( nohup mpv --ytdl-format=worst "$LINK" > /dev/null 2>&1 ) &&
        rm "$CACHE/link"
    elif [ x"$@" = x"download" ]
    then
        LINK=$( cat "$CACHE/link" )
        CONF=$( cat "$CONFIG" | tail -n1 )
        CONF_S=$( cat "$CONFIG" | tail -n2 | head -n1 )
        if [ x"${CONF:0:8}" = x"DOWNLOAD" ]
        then
            download "$CONF" "$LINK"
        elif [ x"${CONF_S:0:8}" = x"DOWNLOAD" ]
        then
            download "$CONF_S" "$LINK"
        else
            download "$LINK"
        fi
        rm $CACHE/last
    elif [ x"$@" = x"play in the background" ]
    then
        check_pid
        LINK=$( cat "$CACHE/link" )
        coproc player ( nohup mpv --no-video "$LINK" > /dev/null 2>&1 ) &&
        rm "$CACHE/link"
        echo ${player_PID} > "$CACHE/pid"
    elif [ x"$@" = x"custom" ]
    then
        CONF=$( cat "$CONFIG" | tail -n1 )
        CONF_S=$( cat "$CONFIG" | tail -n2 | head -n1 )
        if [[ $( echo $CONF | cut -d '|' -f1 ) == "COMMAND" ]]
        then
            custom "$CONF"
        elif [[ $( echo $CONF_F | cut -d '|' -f1 ) == "COMMAND" ]]
        then
            custom "$CONF_S"
        fi
    else
        CHECK=$@
        if [ x${CHECK:0:2} = x"->" ]
        then
            echo ${CHECK:3} > "$CACHE/last"
            TAG="media:title"
            cat "$CACHE_RSS/${CHECK:3}" | grep "<title>" | sed -e :a -e 's/<[^>]*>//g;/</N;//ba' | tail -n +2
        else
            TITLE=$( cat $CACHE/last )
            VIDEO=$( echo $@ )
            LINK=$( cat "$CACHE_RSS/$TITLE" | grep -A 1 "<title>$VIDEO" | tail -n1 | sed -r 's/^.+href="([^"]+)".+$/\1/')
            rm "$CACHE/last"
            echo $LINK > "$CACHE/link"
            echo "watch(best)"
            echo "watch(worst)"
            echo "play in the background"
            echo "download"
            echo "custom"
        fi
    fi
fi
